{"uid":"74f65f11cf0ff76d","name":"Validate well header details for each version selection [4231742813]","fullName":"features/test_well_header.feature:Validate well header details for each version selection","historyId":"792ed4ee44833614b888275d4b70da88","time":{"start":1734183132834,"stop":1734183141529,"duration":8695},"status":"failed","statusMessage":"AssertionError: First Production Date mismatch: '8/1/2021' != '05/01/2021'","statusTrace":"request = <FixtureRequest for <Function test_validate_well_header_details_for_each_version_selection[4231742813]>>, _pytest_bdd_example = {'UWI': '4231742813'}\n\n    @pytest.mark.usefixtures(*args)\n    def scenario_wrapper(request, _pytest_bdd_example):\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../Library/Caches/pypoetry/virtualenvs/pytestifypro-SvOyTSec-py3.13/lib/python3.13/site-packages/pytest_bdd/scenario.py:174: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../Library/Caches/pypoetry/virtualenvs/pytestifypro-SvOyTSec-py3.13/lib/python3.13/site-packages/pytest_bdd/scenario.py:144: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../Library/Caches/pypoetry/virtualenvs/pytestifypro-SvOyTSec-py3.13/lib/python3.13/site-packages/pytest_bdd/scenario.py:114: in _execute_step_function\n    return_value = step_func(**kwargs)\nsrc/pytestifypro/tests/steps/test_well_header_steps.py:270: in assert_first_production_date\n    compare_values(\"First Production Date\", actual_date, expected_date)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nfield_name = 'First Production Date', actual = '8/1/2021', expected = '05/01/2021'\n\n    def compare_values(field_name, actual, expected):\n        \"\"\"\n        Compare actual and expected values with logging and assertion.\n        If the field is a date, normalize the format before comparison.\n        \"\"\"\n        logger.info(f\"Comparing {field_name}: Expected='{expected}', Actual='{actual}'\")\n    \n        if \"date\" in field_name.lower():\n            try:\n                actual_date = parse_date(actual)\n                expected_date = parse_date(expected)\n>               assert actual_date == expected_date, f\"{field_name} mismatch: '{actual}' != '{expected}'\"\nE               AssertionError: First Production Date mismatch: '8/1/2021' != '05/01/2021'\n\nsrc/pytestifypro/utils/ui_actions.py:46: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: First Production Date mismatch: '8/1/2021' != '05/01/2021'","statusTrace":"request = <FixtureRequest for <Function test_validate_well_header_details_for_each_version_selection[4231742813]>>, _pytest_bdd_example = {'UWI': '4231742813'}\n\n    @pytest.mark.usefixtures(*args)\n    def scenario_wrapper(request, _pytest_bdd_example):\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../Library/Caches/pypoetry/virtualenvs/pytestifypro-SvOyTSec-py3.13/lib/python3.13/site-packages/pytest_bdd/scenario.py:174: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../Library/Caches/pypoetry/virtualenvs/pytestifypro-SvOyTSec-py3.13/lib/python3.13/site-packages/pytest_bdd/scenario.py:144: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../Library/Caches/pypoetry/virtualenvs/pytestifypro-SvOyTSec-py3.13/lib/python3.13/site-packages/pytest_bdd/scenario.py:114: in _execute_step_function\n    return_value = step_func(**kwargs)\nsrc/pytestifypro/tests/steps/test_well_header_steps.py:270: in assert_first_production_date\n    compare_values(\"First Production Date\", actual_date, expected_date)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nfield_name = 'First Production Date', actual = '8/1/2021', expected = '05/01/2021'\n\n    def compare_values(field_name, actual, expected):\n        \"\"\"\n        Compare actual and expected values with logging and assertion.\n        If the field is a date, normalize the format before comparison.\n        \"\"\"\n        logger.info(f\"Comparing {field_name}: Expected='{expected}', Actual='{actual}'\")\n    \n        if \"date\" in field_name.lower():\n            try:\n                actual_date = parse_date(actual)\n                expected_date = parse_date(expected)\n>               assert actual_date == expected_date, f\"{field_name} mismatch: '{actual}' != '{expected}'\"\nE               AssertionError: First Production Date mismatch: '8/1/2021' != '05/01/2021'\n\nsrc/pytestifypro/utils/ui_actions.py:46: AssertionError","steps":[{"name":"Given I have a well with UWI \"4231742813\"","time":{"start":1734183132835,"stop":1734183133080,"duration":245},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"When I fetch the available versions for the well from the database","time":{"start":1734183133080,"stop":1734183136776,"duration":3696},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"And I open the well details page in the browser","time":{"start":1734183136776,"stop":1734183138180,"duration":1404},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"And I iterate through each available version and select it","time":{"start":1734183138180,"stop":1734183141009,"duration":2829},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"Then the UI should display the first production date as expected","time":{"start":1734183141009,"stop":1734183141529,"duration":520},"status":"failed","statusMessage":"First Production Date mismatch: '8/1/2021' != '05/01/2021'","statusTrace":"AssertionError: First Production Date mismatch: '8/1/2021' != '05/01/2021'\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false}],"attachments":[{"uid":"fee4c99a20d6c1e3","name":"log","source":"fee4c99a20d6c1e3.txt","type":"text/plain","size":7841}],"parameters":[],"stepsCount":5,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":1,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"Javeds-MacBook-Pro-2.local"},{"name":"thread","value":"41484-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Wells Header Validation"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"UWI","value":"4231742813"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"74f65f11cf0ff76d.json","parameterValues":["4231742813"]}